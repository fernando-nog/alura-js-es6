{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_hasdleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAEaA,W;;;;;;;kDAEKC,G,EAAI;AACd,4BAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACZ,+BAAOH,GAAP;AACH;;;wCAEGI,G,EAAI;AAAA;;AAEJ,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAGH;;;yCAEIJ,G,EAAKK,I,EAAK;AAAA;;AAEX,+BAAOJ,MAAMD,GAAN,EAAW;AACdM,qCAAS,EAAC,gBAAe,kBAAhB,EADK;AAEdC,oCAAQ,MAFM;AAGdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,yBAAX,EAKNH,IALM,CAKD;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBALC,CAAP;AAMH","file":"HttpService.js","sourcesContent":["import {} from '../polyfill/fetch';\n\nexport class HttpService {\n\n    _hasdleErrors(res){\n        if(!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n\n    get(url){\n\n        return fetch(url)\n            .then(res => this._hasdleErrors(res))\n            .then(res => res.json());\n    }\n\n    post(url, dado){\n\n        return fetch(url, {\n            headers: {\"Content-type\":\"application/json\"},\n            method: \"POST\",\n            body: JSON.stringify(dado)\n        })\n        .then(res => this._hasdleErrors(res));\n    }\n}"]}