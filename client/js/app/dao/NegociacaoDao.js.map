{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDAO","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","event","console","log","onerror","target","error","cursor","openCursor","negociacoes","ponteiroNegociacao","result","dado","value","push","_data","_quantidade","_valor","continue","name","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEKC,a;AAET,uCAAYC,UAAZ,EAAuB;AAAA;;AACnB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAW;AAAA;;AAEhB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACiB,WADjB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,UAACC,KAAD,EAAW;AAC3BC,wCAAQC,GAAR,CAAY,kCAAZ;AACAT;AACH,6BAHD;;AAKAE,oCAAQQ,OAAR,GAAkB,UAACH,KAAD,EAAW;AACzBC,wCAAQC,GAAR,CAAYF,MAAMI,MAAN,CAAaC,KAAzB;AACAX,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBAhBM,CAAP;AAiBH;;;iDAEW;AAAA;;AAER,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,aAAD,CADJ,EACoB,WADpB,EAERC,WAFQ,CAEI,aAFJ,EAGRU,UAHQ,EAAb;;AAKA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOP,SAAP,GAAmB,UAACC,KAAD,EAAW;AAC1B,oCAAIS,qBAAqBT,MAAMI,MAAN,CAAaM,MAAtC;;AAEA,oCAAGD,kBAAH,EAAsB;AAClB,wCAAIE,OAAQF,mBAAmBG,KAA/B;AACAJ,gDAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;AACAP,uDAAmBQ,QAAnB;AACH,iCAJD,MAIK;AACDxB,4CAAQe,WAAR;AACH;AACJ,6BAVD;;AAYAF,mCAAOH,OAAP,GAAiB,UAACH,KAAD,EAAW;AACxBC,wCAAQC,GAAR,CAAYF,MAAMI,MAAN,CAAaC,KAAb,CAAmBa,IAA/B;AACH,6BAFD;AAGH,yBAvBM,CAAP;AAwBH;;;iDAEW;AAAA;;AACR,+BAAO,IAAI1B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACnC,gCAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,aAAD,CADH,EACmB,WADnB,EAETC,WAFS,CAEG,aAFH,EAGTsB,KAHS,EAAd;;AAKAxB,oCAAQI,SAAR,GAAoB,UAACC,KAAD,EAAW;AAC3BP,wCAAQ,+CAAR;AACH,6BAFD;;AAIAE,oCAAQQ,OAAR,GAAkB,UAACH,KAAD,EAAW;AACzBC,wCAAQC,GAAR,CAAYF,MAAMI,MAAN,CAAaC,KAAzB;AACAX,uCAAO,6CAAP;AACH,6BAHD;AAIH,yBAdM,CAAP;AAeH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoDAO {\n\n    constructor(connection){\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    adiciona(negociacao){\n\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection\n                .transaction([this._store],'readwrite')\n                .objectStore(this._store)\n                .add(negociacao);\n\n            request.onsuccess = (event) => {\n                console.log('Negociação incluida com sucesso.');\n                resolve();\n            };\n\n            request.onerror = (event) => {\n                console.log(event.target.error);\n                reject('Não foi possível incluir a negociação.');\n            };\n        });\n    }\n\n    listaTodos(){\n\n        return new Promise((resolve, reject) => {\n            let cursor = this._connection\n                .transaction(['negociacoes'],'readwrite')\n                .objectStore('negociacoes')\n                .openCursor();\n\n            let negociacoes = [];\n\n            cursor.onsuccess = (event) => {\n                let ponteiroNegociacao = event.target.result;\n\n                if(ponteiroNegociacao){\n                    var dado =  ponteiroNegociacao.value;\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n                    ponteiroNegociacao.continue();\n                }else{\n                    resolve(negociacoes);\n                }\n            };\n\n            cursor.onerror = (event) => {\n                console.log(event.target.error.name);\n            };\n        });\n    }\n\n    apagaTodos(){\n        return new Promise((resolve, reject) =>{\n            let request = this._connection\n                .transaction(['negociacoes'],'readwrite')\n                .objectStore('negociacoes')\n                .clear();\n\n            request.onsuccess = (event) => {\n                resolve('Todas as negocições foram apagas com sucesso.');\n            };\n\n            request.onerror = (event) => {\n                console.log(event.target.error);\n                reject('Não foi possível apagar todas a negociações');\n            };\n        });\n    }\n}"]}